!function(Ye){"use strict";function He(e,n,r){for(var t,i=document.getElementById(e),o=i.innerHTML.replace("&amp;","&").split(""),a="",u=0,f=o.length;u<f;u++)a+=(t=o[u].replace("&","&amp")).trim()?'<span class="letter-'+u+'">'+t+"</span>":"&nbsp;";i.innerHTML=a;setTimeout(function(){i.className="transition-in "+(r||""),"function"==typeof n&&setTimeout(n,200*o.length)},500*Math.random()+500)}Ye.requestAnimFrame=Ye.requestAnimationFrame||Ye.webkitRequestAnimationFrame||Ye.mozRequestAnimationFrame||function(e){Ye.setTimeout(e,1e3/60)},Ye.onload=function(){var t,i;He("h1"),He("h2"),He("h3"),He("h4",function(){document.getElementById("h5").className="visible"});function r(){function n(e){(i=t.createBufferSource()).connect(t.destination),i.buffer=e,i.onended=function(){i.loop=!1},i.start(0),i.loop=!0}var e=document.getElementById("mouse"),r=(e.className="hidden",setTimeout(function(){e.className="hidden off"},2e3),t.resume().catch(function(e){console.log("reason",e)}),new XMLHttpRequest);r.onload=function(){t.decodeAudioData(r.response,function(e){n(e)})},r.open("GET","audio/es_intrepid_dye_o.mp3"),r.responseType="arraybuffer",r.send()}function a(e){e.requestFullscreen?e.requestFullscreen():e.mozRequestFullScreen?e.mozRequestFullScreen():e.webkitRequestFullscreen?e.webkitRequestFullscreen():e.msRequestFullscreen&&e.msRequestFullscreen()}function u(e,n){if(e=e,!(null!=(n=n)&&"undefined"!=typeof Symbol&&n[Symbol.hasInstance]?n[Symbol.hasInstance](e):e instanceof n))throw new TypeError("Cannot call a class as a function")}function f(e,n){for(var r=0;r<n.length;r++){var t=n[r];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}}function v(e,n,r){return n&&f(e.prototype,n),r&&f(e,r),e}Ye.addEventListener("click",function(){t||(t=new(Ye.AudioContext||Ye.webkitAudioContext),r(),a(document.documentElement))}),Ye.addEventListener("touchstart",function(){t||(t=new(Ye.AudioContext||Ye.webkitAudioContext),r(),a(document.documentElement))});var E=document.getElementsByTagName("canvas")[0],x=(be(),{SIM_RESOLUTION:128,DYE_RESOLUTION:1024,CAPTURE_RESOLUTION:512,DENSITY_DISSIPATION:1,VELOCITY_DISSIPATION:.2,PRESSURE:.8,PRESSURE_ITERATIONS:20,CURL:30,SPLAT_RADIUS:.25,SPLAT_FORCE:6e3,SHADING:!0,COLORFUL:!0,COLOR_UPDATE_SPEED:10,PAUSED:!1,BACK_COLOR:{r:0,g:0,b:0},TRANSPARENT:!1,BLOOM:!0,BLOOM_ITERATIONS:8,BLOOM_RESOLUTION:256,BLOOM_INTENSITY:.8,BLOOM_THRESHOLD:.6,BLOOM_SOFT_KNEE:.7,SUNRAYS:!0,SUNRAYS_RESOLUTION:196,SUNRAYS_WEIGHT:1});function c(){this.id=-1,this.texcoordX=0,this.texcoordY=0,this.prevTexcoordX=0,this.prevTexcoordY=0,this.deltaX=0,this.deltaY=0,this.down=!1,this.moved=!1,this.color=[30,0,300]}var l=[],m=[],e=(l.push(new c),setInterval(function(){m.push(parseInt(10*Math.random())+3)},2e4),function(e){var n={alpha:!0,depth:!1,stencil:!1,antialias:!1,preserveDrawingBuffer:!1},r=e.getContext("webgl2",n),t=!!r;t||(r=e.getContext("webgl",n)||e.getContext("experimental-webgl",n));e=t?(r.getExtension("EXT_color_buffer_float"),r.getExtension("OES_texture_float_linear")):(a=r.getExtension("OES_texture_half_float"),r.getExtension("OES_texture_half_float_linear"));r.clearColor(0,0,0,1);var i,o,a,n=t?r.HALF_FLOAT:a.HALF_FLOAT_OES;a=t?(i=s(r,r.RGBA16F,r.RGBA,n),o=s(r,r.RG16F,r.RG,n),s(r,r.R16F,r.RED,n)):(i=s(r,r.RGBA,r.RGBA,n),o=s(r,r.RGBA,r.RGBA,n),s(r,r.RGBA,r.RGBA,n));return{gl:r,ext:{formatRGBA:i,formatRG:o,formatR:a,halfFloatTexType:n,supportLinearFiltering:e}}}(E)),R=e.gl,d=e.ext;function s(e,n,r,t){if(o=n,a=r,u=t,f=(i=e).createTexture(),i.bindTexture(i.TEXTURE_2D,f),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MIN_FILTER,i.NEAREST),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MAG_FILTER,i.NEAREST),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_S,i.CLAMP_TO_EDGE),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_T,i.CLAMP_TO_EDGE),i.texImage2D(i.TEXTURE_2D,0,o,4,4,0,a,u,null),o=i.createFramebuffer(),i.bindFramebuffer(i.FRAMEBUFFER,o),i.framebufferTexture2D(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0,i.TEXTURE_2D,f,0),i.checkFramebufferStatus(i.FRAMEBUFFER)!==i.FRAMEBUFFER_COMPLETE)switch(n){case e.R16F:return s(e,e.RG16F,e.RG,t);case e.RG16F:return s(e,e.RGBA16F,e.RGBA,t);default:return null}var i,o,a,u,f;return{internalFormat:n,format:r}}function T(){return/Mobi|Android/i.test(navigator.userAgent)}T()&&(x.SIM_RESOLUTION=64,x.DYE_RESOLUTION=512),d.supportLinearFiltering||(x.DYE_RESOLUTION=512,x.SHADING=!1,x.BLOOM=!1,x.SUNRAYS=!1),Ye.dat&&((e=new dat.GUI({width:300})).add(x,"DYE_RESOLUTION",{high:1024,medium:512,low:256,"very low":128}).name("quality").onFinishChange(pe),e.add(x,"SIM_RESOLUTION",{32:32,64:64,128:128,256:256}).name("sim resolution").onFinishChange(pe),e.add(x,"DENSITY_DISSIPATION",0,4).name("density diffusion"),e.add(x,"VELOCITY_DISSIPATION",0,4).name("velocity diffusion"),e.add(x,"PRESSURE",0,1).name("pressure"),e.add(x,"CURL",0,50).name("vorticity").step(1),e.add(x,"SPLAT_RADIUS",.01,1).name("splat radius"),e.add(x,"SHADING").name("shading").onFinishChange(_e),e.add(x,"COLORFUL").name("colorful"),e.add(x,"PAUSED").name("paused").listen(),e.add({fun:function(){m.push(parseInt(20*Math.random())+5)}},"fun").name("Random splats"),(g=e.addFolder("Bloom")).add(x,"BLOOM").name("enabled").onFinishChange(_e),g.add(x,"BLOOM_INTENSITY",.1,2).name("intensity"),g.add(x,"BLOOM_THRESHOLD",0,1).name("threshold"),(g=e.addFolder("Sunrays")).add(x,"SUNRAYS").name("enabled").onFinishChange(_e),g.add(x,"SUNRAYS_WEIGHT",.3,1).name("weight"),T()&&e.close());v(D,[{key:"setKeywords",value:function(e){for(var n=0,r=0;r<e.length;r++)n+=function(e){if(0===e.length)return 0;for(var n=0,r=0;r<e.length;r++)n=(n<<5)-n+e.charCodeAt(r),n|=0;return n}(e[r]);var t,i=this.programs[n];null==i&&(t=o(R.FRAGMENT_SHADER,this.fragmentShaderSource,e),i=_(this.vertexShader,t),this.programs[n]=i),i!==this.activeProgram&&(this.uniforms=y(i),this.activeProgram=i)}},{key:"bind",value:function(){R.useProgram(this.activeProgram)}}]);var g=D;function D(e,n){u(this,D),this.vertexShader=e,this.fragmentShaderSource=n,this.programs=[],this.activeProgram=null,this.uniforms=[]}v(A,[{key:"bind",value:function(){R.useProgram(this.program)}}]);e=A;function A(e,n){u(this,A),this.uniforms={},this.program=_(e,n),this.uniforms=y(this.program)}function _(e,n){var r=R.createProgram();if(R.attachShader(r,e),R.attachShader(r,n),R.linkProgram(r),!R.getProgramParameter(r,R.LINK_STATUS))throw R.getProgramInfoLog(r);return r}function y(e){for(var n=[],r=R.getProgramParameter(e,R.ACTIVE_UNIFORMS),t=0;t<r;t++){var i=R.getActiveUniform(e,t).name;n[i]=R.getUniformLocation(e,i)}return n}function o(e,n,r){n=function(e,n){if(null==n)return e;var r="";return n.forEach(function(e){r+="#define "+e+"\n"}),r+e}(n,r);r=R.createShader(e);if(R.shaderSource(r,n),R.compileShader(r),!R.getShaderParameter(r,R.COMPILE_STATUS))throw R.getShaderInfoLog(r);return r}var p,h,L,U,b,F,w,O,N,I,B,M,n=o(R.VERTEX_SHADER,"\n    precision highp float;\n\n    attribute vec2 aPosition;\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform vec2 texelSize;\n\n    void main () {\n        vUv = aPosition * 0.5 + 0.5;\n        vL = vUv - vec2(texelSize.x, 0.0);\n        vR = vUv + vec2(texelSize.x, 0.0);\n        vT = vUv + vec2(0.0, texelSize.y);\n        vB = vUv - vec2(0.0, texelSize.y);\n        gl_Position = vec4(aPosition, 0.0, 1.0);\n    }\n"),P=o(R.VERTEX_SHADER,"\n    precision highp float;\n\n    attribute vec2 aPosition;\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    uniform vec2 texelSize;\n\n    void main () {\n        vUv = aPosition * 0.5 + 0.5;\n        float offset = 1.33333333;\n        vL = vUv - texelSize * offset;\n        vR = vUv + texelSize * offset;\n        gl_Position = vec4(aPosition, 0.0, 1.0);\n    }\n"),C=o(R.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    uniform sampler2D uTexture;\n\n    void main () {\n        vec4 sum = texture2D(uTexture, vUv) * 0.29411764;\n        sum += texture2D(uTexture, vL) * 0.35294117;\n        sum += texture2D(uTexture, vR) * 0.35294117;\n        gl_FragColor = sum;\n    }\n"),X=o(R.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    uniform sampler2D uTexture;\n\n    void main () {\n        gl_FragColor = texture2D(uTexture, vUv);\n    }\n"),z=o(R.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform float value;\n\n    void main () {\n        gl_FragColor = value * texture2D(uTexture, vUv);\n    }\n"),G=o(R.FRAGMENT_SHADER,"\n    precision mediump float;\n\n    uniform vec4 color;\n\n    void main () {\n        gl_FragColor = color;\n    }\n"),Y=o(R.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform float aspectRatio;\n\n    #define SCALE 25.0\n\n    void main () {\n        vec2 uv = floor(vUv * SCALE * vec2(aspectRatio, 1.0));\n        float v = mod(uv.x + uv.y, 2.0);\n        v = v * 0.1 + 0.8;\n        gl_FragColor = vec4(vec3(v), 1.0);\n    }\n"),H=o(R.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform vec3 curve;\n    uniform float threshold;\n\n    void main () {\n        vec3 c = texture2D(uTexture, vUv).rgb;\n        float br = max(c.r, max(c.g, c.b));\n        float rq = clamp(br - curve.x, 0.0, curve.y);\n        rq = curve.z * rq * rq;\n        c *= max(rq, br - threshold) / max(br, 0.0001);\n        gl_FragColor = vec4(c, 0.0);\n    }\n"),V=o(R.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uTexture;\n\n    void main () {\n        vec4 sum = vec4(0.0);\n        sum += texture2D(uTexture, vL);\n        sum += texture2D(uTexture, vR);\n        sum += texture2D(uTexture, vT);\n        sum += texture2D(uTexture, vB);\n        sum *= 0.25;\n        gl_FragColor = sum;\n    }\n"),k=o(R.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uTexture;\n    uniform float intensity;\n\n    void main () {\n        vec4 sum = vec4(0.0);\n        sum += texture2D(uTexture, vL);\n        sum += texture2D(uTexture, vR);\n        sum += texture2D(uTexture, vT);\n        sum += texture2D(uTexture, vB);\n        sum *= 0.25;\n        gl_FragColor = sum * intensity;\n    }\n"),q=o(R.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n\n    void main () {\n        vec4 c = texture2D(uTexture, vUv);\n        float br = max(c.r, max(c.g, c.b));\n        c.a = 1.0 - min(max(br * 20.0, 0.0), 0.8);\n        gl_FragColor = c;\n    }\n"),W=o(R.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform float weight;\n\n    #define ITERATIONS 16\n\n    void main () {\n        float Density = 0.3;\n        float Decay = 0.95;\n        float Exposure = 0.7;\n\n        vec2 coord = vUv;\n        vec2 dir = vUv - 0.5;\n\n        dir *= 1.0 / float(ITERATIONS) * Density;\n        float illuminationDecay = 1.0;\n\n        float color = texture2D(uTexture, vUv).a;\n\n        for (int i = 0; i < ITERATIONS; i++)\n        {\n            coord -= dir;\n            float col = texture2D(uTexture, coord).a;\n            color += col * illuminationDecay * weight;\n            illuminationDecay *= Decay;\n        }\n\n        gl_FragColor = vec4(color * Exposure, 0.0, 0.0, 1.0);\n    }\n"),K=o(R.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTarget;\n    uniform float aspectRatio;\n    uniform vec3 color;\n    uniform vec2 point;\n    uniform float radius;\n\n    void main () {\n        vec2 p = vUv - point.xy;\n        p.x *= aspectRatio;\n        vec3 splat = exp(-dot(p, p) / radius) * color;\n        vec3 base = texture2D(uTarget, vUv).xyz;\n        gl_FragColor = vec4(base + splat, 1.0);\n    }\n"),j=o(R.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uVelocity;\n    uniform sampler2D uSource;\n    uniform vec2 texelSize;\n    uniform vec2 dyeTexelSize;\n    uniform float dt;\n    uniform float dissipation;\n\n    vec4 bilerp (sampler2D sam, vec2 uv, vec2 tsize) {\n        vec2 st = uv / tsize - 0.5;\n\n        vec2 iuv = floor(st);\n        vec2 fuv = fract(st);\n\n        vec4 a = texture2D(sam, (iuv + vec2(0.5, 0.5)) * tsize);\n        vec4 b = texture2D(sam, (iuv + vec2(1.5, 0.5)) * tsize);\n        vec4 c = texture2D(sam, (iuv + vec2(0.5, 1.5)) * tsize);\n        vec4 d = texture2D(sam, (iuv + vec2(1.5, 1.5)) * tsize);\n\n        return mix(mix(a, b, fuv.x), mix(c, d, fuv.x), fuv.y);\n    }\n\n    void main () {\n    #ifdef MANUAL_FILTERING\n        vec2 coord = vUv - dt * bilerp(uVelocity, vUv, texelSize).xy * texelSize;\n        vec4 result = bilerp(uSource, coord, dyeTexelSize);\n    #else\n        vec2 coord = vUv - dt * texture2D(uVelocity, vUv).xy * texelSize;\n        vec4 result = texture2D(uSource, coord);\n    #endif\n        float decay = 1.0 + dissipation * dt;\n        gl_FragColor = result / decay;\n    }",d.supportLinearFiltering?null:["MANUAL_FILTERING"]),J=o(R.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uVelocity;\n\n    void main () {\n        float L = texture2D(uVelocity, vL).x;\n        float R = texture2D(uVelocity, vR).x;\n        float T = texture2D(uVelocity, vT).y;\n        float B = texture2D(uVelocity, vB).y;\n\n        vec2 C = texture2D(uVelocity, vUv).xy;\n        if (vL.x < 0.0) { L = -C.x; }\n        if (vR.x > 1.0) { R = -C.x; }\n        if (vT.y > 1.0) { T = -C.y; }\n        if (vB.y < 0.0) { B = -C.y; }\n\n        float div = 0.5 * (R - L + T - B);\n        gl_FragColor = vec4(div, 0.0, 0.0, 1.0);\n    }\n"),Q=o(R.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uVelocity;\n\n    void main () {\n        float L = texture2D(uVelocity, vL).y;\n        float R = texture2D(uVelocity, vR).y;\n        float T = texture2D(uVelocity, vT).x;\n        float B = texture2D(uVelocity, vB).x;\n        float vorticity = R - L - T + B;\n        gl_FragColor = vec4(0.5 * vorticity, 0.0, 0.0, 1.0);\n    }\n"),Z=o(R.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uVelocity;\n    uniform sampler2D uCurl;\n    uniform float curl;\n    uniform float dt;\n\n    void main () {\n        float L = texture2D(uCurl, vL).x;\n        float R = texture2D(uCurl, vR).x;\n        float T = texture2D(uCurl, vT).x;\n        float B = texture2D(uCurl, vB).x;\n        float C = texture2D(uCurl, vUv).x;\n\n        vec2 force = 0.5 * vec2(abs(T) - abs(B), abs(R) - abs(L));\n        force /= length(force) + 0.0001;\n        force *= curl * C;\n        force.y *= -1.0;\n\n        vec2 vel = texture2D(uVelocity, vUv).xy;\n        gl_FragColor = vec4(vel + force * dt, 0.0, 1.0);\n    }\n"),$=o(R.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uPressure;\n    uniform sampler2D uDivergence;\n\n    void main () {\n        float L = texture2D(uPressure, vL).x;\n        float R = texture2D(uPressure, vR).x;\n        float T = texture2D(uPressure, vT).x;\n        float B = texture2D(uPressure, vB).x;\n        float C = texture2D(uPressure, vUv).x;\n        float divergence = texture2D(uDivergence, vUv).x;\n        float pressure = (L + R + B + T - divergence) * 0.25;\n        gl_FragColor = vec4(pressure, 0.0, 0.0, 1.0);\n    }\n"),ee=o(R.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uPressure;\n    uniform sampler2D uVelocity;\n\n    void main () {\n        float L = texture2D(uPressure, vL).x;\n        float R = texture2D(uPressure, vR).x;\n        float T = texture2D(uPressure, vT).x;\n        float B = texture2D(uPressure, vB).x;\n        vec2 velocity = texture2D(uVelocity, vUv).xy;\n        velocity.xy -= vec2(R - L, T - B);\n        gl_FragColor = vec4(velocity, 0.0, 1.0);\n    }\n"),S=(R.bindBuffer(R.ARRAY_BUFFER,R.createBuffer()),R.bufferData(R.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),R.STATIC_DRAW),R.bindBuffer(R.ELEMENT_ARRAY_BUFFER,R.createBuffer()),R.bufferData(R.ELEMENT_ARRAY_BUFFER,new Uint16Array([0,1,2,0,2,3]),R.STATIC_DRAW),R.vertexAttribPointer(0,2,R.FLOAT,!1,0,0),R.enableVertexAttribArray(0),function(e){R.bindFramebuffer(R.FRAMEBUFFER,e),R.drawElements(R.TRIANGLES,6,R.UNSIGNED_SHORT,0)}),ne=[],re=(N="img/LDR_LLL1_0.png",I=R.createTexture(),R.bindTexture(R.TEXTURE_2D,I),R.texParameteri(R.TEXTURE_2D,R.TEXTURE_MIN_FILTER,R.LINEAR),R.texParameteri(R.TEXTURE_2D,R.TEXTURE_MAG_FILTER,R.LINEAR),R.texParameteri(R.TEXTURE_2D,R.TEXTURE_WRAP_S,R.REPEAT),R.texParameteri(R.TEXTURE_2D,R.TEXTURE_WRAP_T,R.REPEAT),R.texImage2D(R.TEXTURE_2D,0,R.RGB,1,1,0,R.RGB,R.UNSIGNED_BYTE,new Uint8Array([255,255,255])),B={texture:I,width:1,height:1,attach:function(e){return R.activeTexture(R.TEXTURE0+e),R.bindTexture(R.TEXTURE_2D,I),e}},(M=new Image).onload=function(){B.width=M.width,B.height=M.height,R.bindTexture(R.TEXTURE_2D,I),R.texImage2D(R.TEXTURE_2D,0,R.RGB,R.RGB,R.UNSIGNED_BYTE,M)},M.src=N,B),te=new e(P,C),ie=new e(n,X),oe=new e(n,z),ae=new e(n,G),ue=new e(n,Y),fe=new e(n,H),ve=new e(n,V),ce=new e(n,k),le=new e(n,q),me=new e(n,W),se=new e(n,K),de=new e(n,j),he=new e(n,J),Te=new e(n,Q),ge=new e(n,Z),Ee=new e(n,$),xe=new e(n,ee),Re=new g(n,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uTexture;\n    uniform sampler2D uBloom;\n    uniform sampler2D uSunrays;\n    uniform sampler2D uDithering;\n    uniform vec2 ditherScale;\n    uniform vec2 texelSize;\n\n    vec3 linearToGamma (vec3 color) {\n        color = max(color, vec3(0));\n        return max(1.055 * pow(color, vec3(0.416666667)) - 0.055, vec3(0));\n    }\n\n    void main () {\n        vec3 c = texture2D(uTexture, vUv).rgb;\n\n    #ifdef SHADING\n        vec3 lc = texture2D(uTexture, vL).rgb;\n        vec3 rc = texture2D(uTexture, vR).rgb;\n        vec3 tc = texture2D(uTexture, vT).rgb;\n        vec3 bc = texture2D(uTexture, vB).rgb;\n\n        float dx = length(rc) - length(lc);\n        float dy = length(tc) - length(bc);\n\n        vec3 n = normalize(vec3(dx, dy, length(texelSize)));\n        vec3 l = vec3(0.0, 0.0, 1.0);\n\n        float diffuse = clamp(dot(n, l) + 0.7, 0.7, 1.0);\n        c *= diffuse;\n    #endif\n\n    #ifdef BLOOM\n        vec3 bloom = texture2D(uBloom, vUv).rgb;\n    #endif\n\n    #ifdef SUNRAYS\n        float sunrays = texture2D(uSunrays, vUv).r;\n        c *= sunrays;\n    #ifdef BLOOM\n        bloom *= sunrays;\n    #endif\n    #endif\n\n    #ifdef BLOOM\n        float noise = texture2D(uDithering, vUv * ditherScale).r;\n        noise = noise * 2.0 - 1.0;\n        bloom += noise / 255.0;\n        bloom = linearToGamma(bloom);\n        c += bloom;\n    #endif\n\n        float a = max(c.r, max(c.g, c.b));\n        gl_FragColor = vec4(c, a);\n    }\n");function pe(){var e=ze(x.SIM_RESOLUTION),n=ze(x.DYE_RESOLUTION),r=d.halfFloatTexType,t=d.formatRGBA,i=d.formatRG,o=d.formatR,a=d.supportLinearFiltering?R.LINEAR:R.NEAREST,u=(p=null==p?De(n.width,n.height,t.internalFormat,t.format,r,a):Ae(p,n.width,n.height,t.internalFormat,t.format,r,a),h=null==h?De(e.width,e.height,i.internalFormat,i.format,r,a):Ae(h,e.width,e.height,i.internalFormat,i.format,r,a),L=Se(e.width,e.height,o.internalFormat,o.format,r,R.NEAREST),U=Se(e.width,e.height,o.internalFormat,o.format,r,R.NEAREST),b=De(e.width,e.height,o.internalFormat,o.format,r,R.NEAREST),ze(x.BLOOM_RESOLUTION)),c=d.halfFloatTexType,f=d.formatRGBA,l=d.supportLinearFiltering?R.LINEAR:R.NEAREST;F=Se(u.width,u.height,f.internalFormat,f.format,c,l);for(var v=ne.length=0;v<x.BLOOM_ITERATIONS;v++){var m=u.width>>v+1,s=u.height>>v+1;if(m<2||s<2)break;m=Se(m,s,f.internalFormat,f.format,c,l);ne.push(m)}n=ze(x.SUNRAYS_RESOLUTION),t=d.halfFloatTexType,i=d.formatR,a=d.supportLinearFiltering?R.LINEAR:R.NEAREST,w=Se(n.width,n.height,i.internalFormat,i.format,t,a),O=Se(n.width,n.height,i.internalFormat,i.format,t,a)}function Se(e,n,r,t,i,o){R.activeTexture(R.TEXTURE0);var a=R.createTexture(),o=(R.bindTexture(R.TEXTURE_2D,a),R.texParameteri(R.TEXTURE_2D,R.TEXTURE_MIN_FILTER,o),R.texParameteri(R.TEXTURE_2D,R.TEXTURE_MAG_FILTER,o),R.texParameteri(R.TEXTURE_2D,R.TEXTURE_WRAP_S,R.CLAMP_TO_EDGE),R.texParameteri(R.TEXTURE_2D,R.TEXTURE_WRAP_T,R.CLAMP_TO_EDGE),R.texImage2D(R.TEXTURE_2D,0,r,e,n,0,t,i,null),R.createFramebuffer());return R.bindFramebuffer(R.FRAMEBUFFER,o),R.framebufferTexture2D(R.FRAMEBUFFER,R.COLOR_ATTACHMENT0,R.TEXTURE_2D,a,0),R.viewport(0,0,e,n),R.clear(R.COLOR_BUFFER_BIT),{texture:a,fbo:o,width:e,height:n,texelSizeX:1/e,texelSizeY:1/n,attach:function(e){return R.activeTexture(R.TEXTURE0+e),R.bindTexture(R.TEXTURE_2D,a),e}}}function De(e,n,r,t,i,o){var a=Se(e,n,r,t,i,o),u=Se(e,n,r,t,i,o);return{width:e,height:n,texelSizeX:a.texelSizeX,texelSizeY:a.texelSizeY,get read(){return a},set read(e){a=e},get write(){return u},set write(e){u=e},swap:function(){var e=a;a=u,u=e}}}function Ae(e,n,r,t,i,o,a){return e.width===n&&e.height===r||(e.read=(u=e.read,f=Se(f=n,r,t,i,o,a),ie.bind(),R.uniform1i(ie.uniforms.uTexture,u.attach(0)),S(f.fbo),f),e.write=Se(n,r,t,i,o,a),e.width=n,e.height=r,e.texelSizeX=1/n,e.texelSizeY=1/r),e;var u,f}function _e(){var e=[];x.SHADING&&e.push("SHADING"),x.BLOOM&&e.push("BLOOM"),x.SUNRAYS&&e.push("SUNRAYS"),Re.setKeywords(e)}_e(),pe(),setTimeout(function(){Ie(parseInt(20*Math.random())+5)},200);var ye=Date.now(),Le=0;function Ue(){var e=Date.now(),n=(e-ye)/1e3,n=Math.min(n,.016666);return ye=e,n}function be(){var e=Ge(E.clientWidth),n=Ge(E.clientHeight);return(E.width!==e||E.height!==n)&&(E.width=e,E.height=n,!0)}function Fe(e){x.COLORFUL&&1<=(Le+=e*x.COLOR_UPDATE_SPEED)&&(Le=function(e,n,r){r-=n;return 0!=r?(e-n)%r+n:n}(Le,0,1),l.forEach(function(e){e.color=Xe()}))}function we(){0<m.length&&Ie(m.pop()),l.forEach(function(e){var n,r;e.moved&&(e.moved=!1,n=e.deltaX*x.SPLAT_FORCE,r=e.deltaY*x.SPLAT_FORCE,Be(e.texcoordX,e.texcoordY,n,r,e.color))})}function Oe(e){R.disable(R.BLEND),R.viewport(0,0,h.width,h.height),Te.bind(),R.uniform2f(Te.uniforms.texelSize,h.texelSizeX,h.texelSizeY),R.uniform1i(Te.uniforms.uVelocity,h.read.attach(0)),S(U.fbo),ge.bind(),R.uniform2f(ge.uniforms.texelSize,h.texelSizeX,h.texelSizeY),R.uniform1i(ge.uniforms.uVelocity,h.read.attach(0)),R.uniform1i(ge.uniforms.uCurl,U.attach(1)),R.uniform1f(ge.uniforms.curl,x.CURL),R.uniform1f(ge.uniforms.dt,e),S(h.write.fbo),h.swap(),he.bind(),R.uniform2f(he.uniforms.texelSize,h.texelSizeX,h.texelSizeY),R.uniform1i(he.uniforms.uVelocity,h.read.attach(0)),S(L.fbo),oe.bind(),R.uniform1i(oe.uniforms.uTexture,b.read.attach(0)),R.uniform1f(oe.uniforms.value,x.PRESSURE),S(b.write.fbo),b.swap(),Ee.bind(),R.uniform2f(Ee.uniforms.texelSize,h.texelSizeX,h.texelSizeY),R.uniform1i(Ee.uniforms.uDivergence,L.attach(0));for(var n=0;n<x.PRESSURE_ITERATIONS;n++)R.uniform1i(Ee.uniforms.uPressure,b.read.attach(1)),S(b.write.fbo),b.swap();xe.bind(),R.uniform2f(xe.uniforms.texelSize,h.texelSizeX,h.texelSizeY),R.uniform1i(xe.uniforms.uPressure,b.read.attach(0)),R.uniform1i(xe.uniforms.uVelocity,h.read.attach(1)),S(h.write.fbo),h.swap(),de.bind(),R.uniform2f(de.uniforms.texelSize,h.texelSizeX,h.texelSizeY),d.supportLinearFiltering||R.uniform2f(de.uniforms.dyeTexelSize,h.texelSizeX,h.texelSizeY);var r=h.read.attach(0);R.uniform1i(de.uniforms.uVelocity,r),R.uniform1i(de.uniforms.uSource,r),R.uniform1f(de.uniforms.dt,e),R.uniform1f(de.uniforms.dissipation,x.VELOCITY_DISSIPATION),S(h.write.fbo),h.swap(),R.viewport(0,0,p.width,p.height),d.supportLinearFiltering||R.uniform2f(de.uniforms.dyeTexelSize,p.texelSizeX,p.texelSizeY),R.uniform1i(de.uniforms.uVelocity,h.read.attach(0)),R.uniform1i(de.uniforms.uSource,p.read.attach(1)),R.uniform1f(de.uniforms.dissipation,x.DENSITY_DISSIPATION),S(p.write.fbo),p.swap()}function Ne(e){if(x.BLOOM){var c=p.read,n=F;if(!(ne.length<2)){var r=n,t=(R.disable(R.BLEND),fe.bind(),x.BLOOM_THRESHOLD*x.BLOOM_SOFT_KNEE+1e-4),l=x.BLOOM_THRESHOLD-t,i=2*t,t=.25/t;R.uniform3f(fe.uniforms.curve,l,i,t),R.uniform1f(fe.uniforms.threshold,x.BLOOM_THRESHOLD),R.uniform1i(fe.uniforms.uTexture,c.attach(0)),R.viewport(0,0,r.width,r.height),S(r.fbo),ve.bind();for(var m=0;m<ne.length;m++){var o=ne[m];R.uniform2f(ve.uniforms.texelSize,r.texelSizeX,r.texelSizeY),R.uniform1i(ve.uniforms.uTexture,r.attach(0)),R.viewport(0,0,o.width,o.height),S(o.fbo),r=o}R.blendFunc(R.ONE,R.ONE),R.enable(R.BLEND);for(var s=ne.length-2;0<=s;s--){var a=ne[s];R.uniform2f(ve.uniforms.texelSize,r.texelSizeX,r.texelSizeY),R.uniform1i(ve.uniforms.uTexture,r.attach(0)),R.viewport(0,0,a.width,a.height),S(a.fbo),r=a}R.disable(R.BLEND),ce.bind(),R.uniform2f(ce.uniforms.texelSize,r.texelSizeX,r.texelSizeY),R.uniform1i(ce.uniforms.uTexture,r.attach(0)),R.uniform1f(ce.uniforms.intensity,x.BLOOM_INTENSITY),R.viewport(0,0,n.width,n.height),S(n.fbo)}}if(x.SUNRAYS){l=p.read,i=p.write,t=w,R.disable(R.BLEND),le.bind(),R.uniform1i(le.uniforms.uTexture,l.attach(0)),R.viewport(0,0,i.width,i.height),S(i.fbo),me.bind(),R.uniform1f(me.uniforms.weight,x.SUNRAYS_WEIGHT),R.uniform1i(me.uniforms.uTexture,i.attach(0)),R.viewport(0,0,t.width,t.height),S(t.fbo);var u=w,d=O,h=1;te.bind();for(var T=0;T<h;T++)R.uniform2f(te.uniforms.texelSize,u.texelSizeX,0),R.uniform1i(te.uniforms.uTexture,u.attach(0)),S(d.fbo),R.uniform2f(te.uniforms.texelSize,0,u.texelSizeY),R.uniform1i(te.uniforms.uTexture,d.attach(0)),S(u.fbo)}null!=e&&x.TRANSPARENT?R.disable(R.BLEND):(R.blendFunc(R.ONE,R.ONE_MINUS_SRC_ALPHA),R.enable(R.BLEND));var f,c=null==e?R.drawingBufferWidth:e.width,n=null==e?R.drawingBufferHeight:e.height,v=(R.viewport(0,0,c,n),null==e?null:e.fbo),g=(x.TRANSPARENT||(g=v,f=x.BACK_COLOR,f={r:f.r/255,g:f.g/255,b:f.b/255},ae.bind(),R.uniform4f(ae.uniforms.color,f.r,f.g,f.b,1),S(g)),null==e&&x.TRANSPARENT&&(f=v,ue.bind(),R.uniform1f(ue.uniforms.aspectRatio,E.width/E.height),S(f)),v),e=c,v=n;Re.bind(),x.SHADING&&R.uniform2f(Re.uniforms.texelSize,1/e,1/v),R.uniform1i(Re.uniforms.uTexture,p.read.attach(0)),x.BLOOM&&(R.uniform1i(Re.uniforms.uBloom,F.attach(1)),R.uniform1i(Re.uniforms.uDithering,re.attach(2)),e=function(e,n,r){return{x:n/e.width,y:r/e.height}}(re,e,v),R.uniform2f(Re.uniforms.ditherScale,e.x,e.y)),x.SUNRAYS&&R.uniform1i(Re.uniforms.uSunrays,w.attach(3)),S(g)}function Ie(e){for(var n=0;n<e;n++){var r=Xe();r.r*=10,r.g*=10,r.b*=10,Be(Math.random(),Math.random(),1e3*(Math.random()-.5),1e3*(Math.random()-.5),r)}}function Be(e,n,r,t,i){R.viewport(0,0,h.width,h.height),se.bind(),R.uniform1i(se.uniforms.uTarget,h.read.attach(0)),R.uniform1f(se.uniforms.aspectRatio,E.width/E.height),R.uniform2f(se.uniforms.point,e,n),R.uniform3f(se.uniforms.color,r,t,0),R.uniform1f(se.uniforms.radius,function(e){var n=E.width/E.height;1<n&&(e*=n);return e}(x.SPLAT_RADIUS/100)),S(h.write.fbo),h.swap(),R.viewport(0,0,p.width,p.height),R.uniform1i(se.uniforms.uTarget,p.read.attach(0)),R.uniform3f(se.uniforms.color,i.r,i.g,i.b),S(p.write.fbo),p.swap()}function Me(e,n,r,t){e.id=n,e.down=!0,e.moved=!1,e.texcoordX=r/E.width,e.texcoordY=1-t/E.height,e.prevTexcoordX=e.texcoordX,e.prevTexcoordY=e.texcoordY,e.deltaX=0,e.deltaY=0,e.color=Xe()}function Pe(e,n,r){e.prevTexcoordX=e.texcoordX,e.prevTexcoordY=e.texcoordY,e.texcoordX=n/E.width,e.texcoordY=1-r/E.height,e.deltaX=function(e){var n=E.width/E.height;n<1&&(e*=n);return e}(e.texcoordX-e.prevTexcoordX),e.deltaY=function(e){var n=E.width/E.height;1<n&&(e/=n);return e}(e.texcoordY-e.prevTexcoordY),e.moved=0<Math.abs(e.deltaX)||0<Math.abs(e.deltaY)}function Ce(e){e.down=!1}function Xe(){var e=function(e,n,r){var t,i,o,a,u,f,v;switch(a=Math.floor(6*e),u=r*(1-n),f=r*(1-(e=6*e-a)*n),v=r*(1-(1-e)*n),a%6){case 0:t=r,i=v,o=u;break;case 1:t=f,i=r,o=u;break;case 2:t=u,i=r,o=v;break;case 3:t=u,i=f,o=r;break;case 4:t=v,i=u,o=r;break;case 5:t=r,i=u,o=f}return{r:t,g:i,b:o}}(Math.random(),1,1);return e.r*=.15,e.g*=.15,e.b*=.15,e}function ze(e){var n=R.drawingBufferWidth/R.drawingBufferHeight,r=(n<1&&(n=1/n),Math.round(e)),e=Math.round(e*n);return R.drawingBufferWidth>R.drawingBufferHeight?{width:e,height:r}:{width:r,height:e}}function Ge(e){var n=Ye.devicePixelRatio||1;return Math.floor(e*n)}!function e(){var n=Ue();be()&&pe();Fe(n);we();x.PAUSED||Oe(n);Ne(null);requestAnimationFrame(e)}(),E.addEventListener("mouseenter",function(e){var n=Ge(e.offsetX),e=Ge(e.offsetY),r=l.find(function(e){return-1===e.id});Me(r=null==r?new c:r,-1,n,e)}),E.addEventListener("mousemove",function(e){var n=l[0];n.down&&Pe(n,Ge(e.offsetX),Ge(e.offsetY))}),E.addEventListener("mouseleave",function(){Ce(l[0])}),E.addEventListener("touchstart",function(e){e.preventDefault();for(var n=e.targetTouches;n.length>=l.length;)l.push(new c);for(var r=0;r<n.length;r++){var t=Ge(n[r].pageX),i=Ge(n[r].pageY);Me(l[r+1],n[r].identifier,t,i)}}),E.addEventListener("touchmove",function(e){e.preventDefault();for(var n=e.targetTouches,r=0;r<n.length;r++){var t=l[r+1];t.down&&Pe(t,Ge(n[r].pageX),Ge(n[r].pageY))}},!1),Ye.addEventListener("touchend",function(e){for(var r=e.changedTouches,n=0;n<r.length;n++)!function(n){var e=l.find(function(e){return e.id===r[n].identifier});if(null==e)return;Ce(e)}(n)}),Ye.addEventListener("keydown",function(e){" "===e.key&&m.push(parseInt(20*Math.random())+5)})}}(window);